arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
arrive
last_time
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
```{r}
library('ggplot2')
library('knitr')
file<-"D:/Big Data/courses-master/courses-master/05_ReproducibleResearch/lectures/exercise/pedometer.csv"
mydata<-read.csv(file, header=TRUE, sep=",")
```
```{r}
library('ggplot2')
library('knitr')
file<-"D:/Big Data/courses-master/courses-master/05_ReproducibleResearch/lectures/exercise/pedometer.csv"
mydata<-read.csv(file, header=TRUE, sep=",")
```
View(mydata)
library(ggplot2)
library(ggplot2)
myDay<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
myTotal<-c(1,2,3,4,5)
dt<-data.frame(myDay,myTotal)
dayType<-myDay<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
view<-dt
View(dt)
ggpot(dt,aes(x-myDay,y-myTotal,fill=factor(Day)))+geom_bar(stat-"Identify")
ggplot(dt,aes(x-myDay,y-myTotal,fill=factor(Day)))+geom_bar(stat-"Identify")
ggplot(dt,aes(x-myDay,y-myTotal,fill=factor(Day)))+geom_bar(stat="Identify")
ggplot(dt,aes(x-myDay,y-myTotal,fill=factor(Day)))+geom_bar(stat="identify")
ggplot(dt,aes(x=myDay,y=myTotal,fill=factor(Day)))+geom_bar(stat="identify")
ggplot(dt,aes(x=myDay,y=myTotal,fill=factor(Day)))+geom_bar(stat="identity")
ggplot(dt,aes(x=myDay,y=myTotal,fill=factor(Day)))+geom_bar(stat="identity")
dt$myDay<-factor(dt$myDay,c ("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
ggplot(dt,aes(x=myDay,y=myTotal,fill=factor(Day)))+geom_bar(stat="identity")
dayType<-myDay<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
view(dt)
View(dt)
library(ggplot2)
myDay<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
myTotal<-c(1,2,3,4,5)
dt<-data.frame(myDay,myTotal)
dayType<-myDay<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
dt$myDay<-ifelse(is.element(dt$myDay,dayType),"WEEKDAY","WEEKEND")
View(dt)
dt$myDay<-factor(dt$myDay,c ("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
ggplot(dt,aes(x=myDay,y=myTotal,fill=factor(Day)))+geom_bar(stat="identity")
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
df<-repx(40,0.2)
df<-rexp(40,0.2)
hist(df)
df<-data.frame(mean=numeric(1000))
View(df)
for(i in 0.2:1000)
{
sample_simulation<-rexp(40,0.2)
df[i,l]<-mean(sample)
}
l<-0.2        # lambda
n<-40         # number of exponentials
s<-1000       # number of simulations
# initialize a data frame with a row count of the number of simulations
df<-data.frame(mean=numeric(s))
# iterate 1 to the number of simulations variable
for (i in 1:s) {
ss<-rexp(n,l)     # simulation set of n exponential with l lambda
df[i,1]<-mean(ss) # mean of simulation set
}
hist(df)
l<-0.2        # lambda
n<-40         # number of exponentials
s<-1000       # number of simulations
# initialize a data frame with a row count of the number of simulations
df<-data.frame(mean=numeric(s))
# iterate 1 to the number of simulations variable
for (i in 1:s) {
ss<-rexp(n,l)     # simulation set of n exponential with l lambda
df[i,1]<-mean(ss) # mean of simulation set
}
hist(df)```
summary(df)
library(lattice)
library(gplots)
library(lattice)
library(ggplots)
library(lattice)
library(gplots)
install.packages("ggplot")
install.packages("gplots")
library(gplots)
lambda <- 0.2
n <- 40
simulations <- 1:2000
set.seed(33) #this is needed to make the exercise reproducible (can be any number)
means <- data.frame(x = sapply(simulations, function(x) {mean(rexp(n, lambda))}))
mean(means$x) # sampling mean = 5.000542
(1/lambda) # theoretical mean = 5
var(means$x) # sampling var = 0.6564438
sd(means$x) # sampling sd = 0.8102122
((1/lambda)/sqrt(n))^2 # theoretical var = 0.625
(1/lambda)/sqrt(n) # theoretical sd = 0.7905694
shapiro.test(means$x)
tmp <- hist(means$x, freq=TRUE, main="Data histogram and normal curve",
col="lightgreen", axes = FALSE, xlab='Mean', yaxt='n', ylab='Frequency')
axis(2, pos = 2.5)
axis(1,at=seq(0,8,1), pos=0)
multiplier <- tmp$counts / tmp$density
mydensity <- density(means$x)
mydensity$y <- mydensity$y * multiplier[1]
myx <- seq(2.5, 8, length.out= 100)
mymean <- mean(means$x)
mysd <- sd(means$x)
normal <- dnorm(x = myx, mean = mymean, sd = mysd)
lines(myx, normal * multiplier[1], col = "blue", lwd = 3)
mean(means$x) + c(-1,1)*1.96*sd(means$x)/sqrt(nrow(means))
data(ToothGrowth)
nrow(ToothGrowth)
ncol(ToothGrowth)
str(ToothGrowth)
ToothGrowth$dose #I must consider 0.5, 1 and 2 as scales
ToothGrowth$dose = factor(ToothGrowth$dose, levels=c(0.5,1.0,2.0),
labels=c("low","med","high"))
attach(ToothGrowth)
table(supp,dose)
bwplot(len ~ dose | supp)
summary(ToothGrowth)
aggregate(len,list(supp,dose), mean)
aggregate(len,list(supp,dose), sd)
anova <- aov(len ~ supp * dose, data=ToothGrowth)
TukeyHSD(anova)
plotmeans(len~interaction(supp,dose,sep=" "),connect=list(c(1,3,5),c(2,4,6)),col=c("red","darkgreen"),xlab="Dose and Supp Combination",main = "Interaction plot with 95% confidence intervals")
install.packages("ggally")
library(GGally)
library(gridExtra)
library(datasets)
library(GGally)
install.packages("GGally")
install.packages("GGally")
library(GGally)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y-x)
fit<-lm(y~x)
est<-predict(fit,data.frame(x))
plot(x,y)
abline(fit,col="red")
summary(fit)
help(mtcar)
help(mtcars)
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(x~y)
predict(fit,data.frame(x=mean(x)), interval="confidence")
plot(x,y)
p1<-predict(fit,data.frame(x=mean(x)), interval="confidence")
plot(x,y,xlab='Weight (10001b)',ylab='mpg')
abline(fit,col="red")
abline(fit,col="red")
lines(x,p1[,2],col="purple")
lines(x,p1[,3],col="purple")
p1<-predict(fit,data.frame(x), interval="confidence")
plot(x,y,xlab='Weight (1000lb)',ylab='MPG')
abline(fit,col="red")
lines(x,p1[,2],col="purple")
lines(x,p1[,3],col="purple")
plot(x,y,xlab='Weight (10001b)',ylab='mpg')
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<-lm(y~x)
est<-predict(fit,data.frame(x))
plot(x,y)
abline(fit,col="red")
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(x~y)
p1<-predict(fit,data.frame(x=mean(x)), interval="confidence")
plot(x,y)
abline(fit,col="red")
lines(x,p1[,2],col="purple")
lines(x,p1[,3],col="purple")
predict(fit,data.frame(x=mean(x)), interval="confidence")
p1<-predict(fit,data.frame(x=mean(x)), interval="confidence")
plot(x,y)
abline(fit,col="red")
View(`p1`)
summary(fit)
p1<-predict(fit,data.frame(x=mean(x=3)), interval="confidence")
plot(x,y)
abline(fit,col="red")
lines(x,p1[,2],col="purple")
data(mtcars)
data(mtcars)
fit <- lm(mpg ~ cyl + wt, mtcars)
summary(fit)
fit <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
factor(cql)8
factor(cql)
factor(cyl)
factor(cyl)8
factor(8)
View(mtcars)
summary(fit)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt + interaction(cyl, wt), data = mtcars)
compare <- anova(fit1, fit2)
View(compare)
compare$Pr
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
lm(mpg ~ factor(cyl) + wt, data = mtcars)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(x~y)
hitvalues(fit)
hatvalues(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(x~y)
fit<-lm(y~x)
dfbetas(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
hatvalues(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
dfbetas(fit)
library(MASS)
data(shuttle)
library(MASS)
data(shuttle)
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
fit1 <- glm(use ~ wind - 1, data = shuttle, family = "binomial")
summary(fit)
summary(fit1)
windhead <- fit1$coef[1]
windtail <- fit1$coef[2]
exp(windtail)/exp(windhead)
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
fit2 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
library(MASS)
data(shuttle)
data(shuttle)
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
fit2 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
summary(fit)
windhead2 <- fit2$coef[1]
windtail2 <- fit2$coef[2]
exp(windtail2)/exp(windhead2)
library(MASS)
data(shuttle)
shuttle$auto <- as.numeric(shuttle$use=="auto")
fit <- glm(auto ~ wind,  binomial,  shuttle)
fit3 <- glm(1-auto ~ wind,  binomial, shuttle)
fit$coefficients
fit3$coefficients
View(shuttle)
data(InsectSprays)
fit <- glm(count ~ spray  - 1, family = "poisson", data = InsectSprays)
exp(fit$coef[1])/exp(fit$coef[2])
data(mtcars)
fit1 <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
fit1
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
lhs <- function(x) ifelse(x < 0,0-x,0) # basis function 1 (lhs = left hockey stick)
rhs <- function(x) ifelse(x > 0,x-0,0) # basis function 2 (rhs = right hockey stick)
gb <- lm(y ~ lhs(x) + rhs(x))
x <- seq(-5,5,by=1)
py <- gb$coef[1]+gb$coef[2]*lhs(x)+gb$coef[3]*rhs(x)
lines(x, py)
plot(x, py)
lines(x,py)
library (shiny)
install.packages("shiny")
install.packages("shiny")
install.packages("lubridate")
library (shiny)
library(ggplot2)
library(lubridate)
install.packages("plotly");
install.packages("plotly")
library(plotly)
library(plotly)
p<-plot_ly(economics,x-date, y-unemploy/pop)
View(p)
View(p)
View(p)
P
P
p
p
p<-plot_ly(economics,x=date, y=unemploy/pop)
p
sys.setenv("plotly_username"="RaziffRamli")
sys.setenv("plotly_api_key"="lez67on8lu")
library(plotly)
p <- plot_ly(midwest, x = percollege, color = state, type = "box")
plotly_POST(p, filename = "r-docs/midwest-boxplots", world_readable=TRUE)
sys.setenv("plotly_username"="RaziffRamli")
sys.setenv("plotly_api_key"="lez67on8lu")
Sys.setenv("plotly_username"="RaziffRamli")
Sys.setenv("plotly_api_key"="lez67on8lu")
p <- plot_ly(midwest, x = percollege, color = state, type = "box")
plotly_POST(p, filename = "rProfile", world_readable=TRUE)
p<-plot_ly(economics,x=date, y=unemploy/pop)
plotly_POST(p, filename = "MODULE9", world_readable=TRUE)
install.packages("googleVIS")
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp3')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp3')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
Course Project: Shiny Application and Reproducible Pitch
========================================================
author: Mohamad Raziff Ramli
Course Project: Shiny Application and Reproducible Pitch
========================================================
Course Project: Shiny Application and Reproducible Pitch
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp3')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp3')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp3')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
shiny::runApp('C:/Users/Windows 8/Dropbox/project/realApp')
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='razifframli',
token='A8C21EDA5F4598A195B6A75AEEC6FEE3',
secret='<SECRET>')
devtools::install_github('rstudio/rsconnect')
library(devtools)
devtools::install_github('rstudio/rsconnect')
devtools::install_github('rstudio/rsconnect')
install.packages(digest)
install.packages("digest")
install.packages("digest")
devtools::install_github('rstudio/rsconnect')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
rsconnect::setAccountInfo(name='razifframli', token='A8C21EDA5F4598A195B6A75AEEC6FEE3', secret='ukCYRJqB/xHNo1sDZfdINV1sF+aedIUBF0N3Yd2R')
rsconnect::deployApp('C:/Users/Windows 8/Dropbox/project/realApp')
rsconnect::deployApp('C:/Users/Windows 8/Dropbox/project/realApp')
setwd("C:/Users/Windows 8/Dropbox/project/realApp")
![alt text](myApps.png)
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp3')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp2')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny2/testApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/shiny/testApp')
shiny::runApp('D:/BigData/courses-master/courses-master/09_DevelopingDataProducts/project/realApp')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp()
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
shiny::runApp('testPlot')
read.csv("Cars93.csv")
shiny::runApp('testPlot')
shiny::runApp('testPlot')
